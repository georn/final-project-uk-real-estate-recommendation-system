"""Initial migration

Revision ID: 0dc7b65df6f1
Revises: 
Create Date: 2024-08-27 11:08:30.067146

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0dc7b65df6f1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('historical_properties',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('date_of_transaction', sa.Date(), nullable=False),
    sa.Column('postal_code', sa.String(), nullable=False),
    sa.Column('property_type', sa.Enum('DETACHED', 'SEMI_DETACHED', 'TERRACED', 'FLAT', 'OTHER', name='propertytype'), nullable=False),
    sa.Column('property_age', sa.Enum('NEW', 'OLD', name='propertyage'), nullable=False),
    sa.Column('duration', sa.Enum('FREEHOLD', 'LEASEHOLD', name='propertyduration'), nullable=False),
    sa.Column('paon', sa.String(), nullable=True),
    sa.Column('saon', sa.String(), nullable=True),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('locality', sa.String(), nullable=True),
    sa.Column('town_city', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('ppd_category_type', sa.Enum('STANDARD_PRICE_PAID', 'ADDITIONAL_PRICE_PAID', name='ppdcategorytype'), nullable=False),
    sa.Column('record_status', sa.Enum('ADDITION', 'DELETION', name='recordstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_historical_properties_id'), 'historical_properties', ['id'], unique=False)
    op.create_table('listing_properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_url', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('pricing_qualifier', sa.String(), nullable=True),
    sa.Column('listing_time', sa.String(), nullable=True),
    sa.Column('property_type', sa.String(), nullable=False),
    sa.Column('bedrooms', sa.String(), nullable=True),
    sa.Column('bathrooms', sa.String(), nullable=True),
    sa.Column('epc_rating', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('property_url')
    )
    op.create_index(op.f('ix_listing_properties_id'), 'listing_properties', ['id'], unique=False)
    op.create_table('synthetic_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('income', sa.Float(), nullable=False),
    sa.Column('savings', sa.Float(), nullable=False),
    sa.Column('preferred_location', sa.String(), nullable=False),
    sa.Column('desired_property_type', sa.String(), nullable=False),
    sa.Column('must_have_features', sa.String(), nullable=False),
    sa.Column('nice_to_have_features', sa.String(), nullable=False),
    sa.Column('max_commute_time', sa.Integer(), nullable=False),
    sa.Column('family_size', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_synthetic_users_id'), 'synthetic_users', ['id'], unique=False)
    op.create_table('merged_properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('historical_id', sa.String(), nullable=True),
    sa.Column('listing_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('property_type', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('property_age', sa.String(), nullable=True),
    sa.Column('duration', sa.String(), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.Column('epc_rating', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('listing_time', sa.String(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['historical_id'], ['historical_properties.id'], ),
    sa.ForeignKeyConstraint(['listing_id'], ['listing_properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_merged_properties_id'), 'merged_properties', ['id'], unique=False)
    op.create_table('processed_properties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('size_sq_ft', sa.Float(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('day_of_week', sa.Integer(), nullable=True),
    sa.Column('price_to_income_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_savings_ratio', sa.Float(), nullable=True),
    sa.Column('affordability_score', sa.Float(), nullable=True),
    sa.Column('has_garden', sa.Boolean(), nullable=True),
    sa.Column('has_parking', sa.Boolean(), nullable=True),
    sa.Column('location_Urban', sa.Boolean(), nullable=True),
    sa.Column('location_Suburban', sa.Boolean(), nullable=True),
    sa.Column('location_Rural', sa.Boolean(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('epc_rating_encoded', sa.Integer(), nullable=True),
    sa.Column('property_type_Detached', sa.Boolean(), nullable=True),
    sa.Column('property_type_Semi_Detached', sa.Boolean(), nullable=True),
    sa.Column('property_type_Terraced', sa.Boolean(), nullable=True),
    sa.Column('property_type_Flat_Maisonette', sa.Boolean(), nullable=True),
    sa.Column('property_type_Other', sa.Boolean(), nullable=True),
    sa.Column('bedrooms', sa.Integer(), nullable=True),
    sa.Column('bathrooms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['original_id'], ['merged_properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_processed_properties_id'), 'processed_properties', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_processed_properties_id'), table_name='processed_properties')
    op.drop_table('processed_properties')
    op.drop_index(op.f('ix_merged_properties_id'), table_name='merged_properties')
    op.drop_table('merged_properties')
    op.drop_index(op.f('ix_synthetic_users_id'), table_name='synthetic_users')
    op.drop_table('synthetic_users')
    op.drop_index(op.f('ix_listing_properties_id'), table_name='listing_properties')
    op.drop_table('listing_properties')
    op.drop_index(op.f('ix_historical_properties_id'), table_name='historical_properties')
    op.drop_table('historical_properties')
    # ### end Alembic commands ###
